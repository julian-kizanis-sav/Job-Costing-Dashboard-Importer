#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.4 on Wed Nov 20 12:12:02 2019
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class FirstFrame(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: FirstFrame.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
		wx.Frame.__init__(self, *args, **kwds)
		self.SetSize((600, 428))
		self.window_1 = CustomWidget(self, wx.ID_ANY)
		self.text_ctrl_1 = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY)
		self.choice_1 = wx.Choice(self, wx.ID_ANY, choices=["Choose Phase", "Rough In", "Finish"])
		self.checkbox_3 = wx.CheckBox(self, wx.ID_ANY, "General Master Dashboard")
		self.checkbox_4 = wx.CheckBox(self, wx.ID_ANY, "Kaceys's Master Dashboard")
		self.checkbox_5 = wx.CheckBox(self, wx.ID_ANY, "Jake's Master Dashboard")
		self.panel_1 = wx.Panel(self, wx.ID_ANY)
		self.button_2 = wx.Button(self, wx.ID_ANY, "Continue")
		self.button_3 = wx.Button(self, wx.ID_ANY, "Cancel")

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_CHOICE, self.on_phase_selection, self.choice_1)
		self.Bind(wx.EVT_CHECKBOX, self.on_general_master_dashboard_checkbox, self.checkbox_3)
		self.Bind(wx.EVT_CHECKBOX, self.on_kaceys_master_dashboard_checkbox, self.checkbox_4)
		self.Bind(wx.EVT_CHECKBOX, self.on_jakes_master_dashboard_checkbox, self.checkbox_5)
		self.Bind(wx.EVT_BUTTON, self.on_continue_from_main_window, self.button_2)
		self.Bind(wx.EVT_BUTTON, self.on_cancel_program, self.button_3)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: FirstFrame.__set_properties
		self.SetTitle("Import Project Datasheet")
		_icon = wx.NullIcon
		_icon.CopyFromBitmap(wx.Bitmap("C:\\Users\\Julian.Kizanis\\OneDrive - SAV Digital Environments\\Python Code\\Job Costing Program\\SAV-Social-Profile.jpg", wx.BITMAP_TYPE_ANY))
		self.SetIcon(_icon)
		self.SetBackgroundColour(wx.Colour(255, 255, 255))
		self.choice_1.SetMinSize((102, 23))
		self.choice_1.SetSelection(0)
		self.checkbox_3.SetValue(1)
		self.checkbox_4.SetValue(1)
		self.checkbox_5.SetValue(1)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: FirstFrame.__do_layout
		sizer_5 = wx.BoxSizer(wx.VERTICAL)
		sizer_9 = wx.GridBagSizer(0, 0)
		sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_8 = wx.BoxSizer(wx.VERTICAL)
		sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_15 = wx.BoxSizer(wx.VERTICAL)
		sizer_12 = wx.BoxSizer(wx.VERTICAL)
		sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_7 = wx.BoxSizer(wx.VERTICAL)
		sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_16 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_10 = wx.BoxSizer(wx.VERTICAL)
		label_1 = wx.StaticText(self, wx.ID_ANY, "Put instructions here")
		sizer_10.Add(label_1, 0, wx.ALL, 5)
		static_line_1 = wx.StaticLine(self, wx.ID_ANY)
		sizer_10.Add(static_line_1, 0, wx.EXPAND, 0)
		sizer_5.Add(sizer_10, 0, wx.EXPAND, 0)
		sizer_16.Add(self.window_1, 1, wx.EXPAND, 0)
		label_6 = wx.StaticText(self, wx.ID_ANY, "Or drag and drop files below")
		sizer_16.Add(label_6, 0, wx.ALIGN_CENTER, 0)
		sizer_7.Add(sizer_16, 0, wx.EXPAND, 0)
		sizer_14.Add(self.text_ctrl_1, 1, wx.EXPAND, 0)
		sizer_7.Add(sizer_14, 1, wx.EXPAND, 0)
		sizer_6.Add(sizer_7, 2, wx.EXPAND, 0)
		bitmap_2 = wx.StaticBitmap(self, wx.ID_ANY, wx.Bitmap("C:\\Users\\Julian.Kizanis\\OneDrive - SAV Digital Environments\\Python Code\\Job Costing Program\\SAV-Company-Logo.png", wx.BITMAP_TYPE_ANY))
		sizer_12.Add(bitmap_2, 0, wx.BOTTOM | wx.RIGHT | wx.TOP, 12)
		sizer_13.Add(self.choice_1, 0, wx.BOTTOM | wx.LEFT, 6)
		sizer_12.Add(sizer_13, 1, wx.EXPAND, 0)
		sizer_8.Add(sizer_12, 0, wx.EXPAND, 0)
		sizer_15.Add(self.checkbox_3, 0, wx.LEFT | wx.RIGHT | wx.TOP, 6)
		sizer_15.Add(self.checkbox_4, 0, wx.LEFT | wx.RIGHT | wx.TOP, 6)
		sizer_15.Add(self.checkbox_5, 0, wx.LEFT | wx.RIGHT | wx.TOP, 6)
		sizer_11.Add(sizer_15, 1, wx.EXPAND, 0)
		sizer_8.Add(sizer_11, 1, wx.EXPAND, 0)
		sizer_6.Add(sizer_8, 0, wx.EXPAND | wx.LEFT, 6)
		sizer_5.Add(sizer_6, 1, wx.EXPAND, 0)
		sizer_9.Add(self.panel_1, (0, 0), (1, 1), wx.EXPAND, 0)
		sizer_9.Add(self.button_2, (0, 1), (1, 1), wx.ALIGN_BOTTOM | wx.ALIGN_RIGHT | wx.ALL, 6)
		sizer_9.Add(self.button_3, (0, 2), (1, 1), wx.ALIGN_BOTTOM | wx.ALIGN_RIGHT | wx.ALL, 6)
		sizer_5.Add(sizer_9, 0, wx.ALIGN_BOTTOM | wx.ALIGN_RIGHT | wx.ALL | wx.EXPAND, 12)
		self.SetSizer(sizer_5)
		self.Layout()
		# end wxGlade

	def on_phase_selection(self, event):  # wxGlade: FirstFrame.<event_handler>
		print("Event handler 'on_phase_selection' not implemented!")
		event.Skip()

	def on_general_master_dashboard_checkbox(self, event):  # wxGlade: FirstFrame.<event_handler>
		print("Event handler 'on_general_master_dashboard_checkbox' not implemented!")
		event.Skip()

	def on_kaceys_master_dashboard_checkbox(self, event):  # wxGlade: FirstFrame.<event_handler>
		print("Event handler 'on_kaceys_master_dashboard_checkbox' not implemented!")
		event.Skip()

	def on_jakes_master_dashboard_checkbox(self, event):  # wxGlade: FirstFrame.<event_handler>
		print("Event handler 'on_jakes_master_dashboard_checkbox' not implemented!")
		event.Skip()

	def on_continue_from_main_window(self, event):  # wxGlade: FirstFrame.<event_handler>
		print("Event handler 'on_continue_from_main_window' not implemented!")
		event.Skip()

	def on_cancel_program(self, event):  # wxGlade: FirstFrame.<event_handler>
		print("Event handler 'on_cancel_program' not implemented!")
		event.Skip()

# end of class FirstFrame

class are_you_sure_replace_dialog(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: are_you_sure_replace_dialog.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.panel_2 = wx.Panel(self, wx.ID_ANY)
		self.button_1 = wx.Button(self, wx.ID_ANY, "Replace")
		self.button_5 = wx.Button(self, wx.ID_ANY, "Back")

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.on_replace, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.on_back, self.button_5)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: are_you_sure_replace_dialog.__set_properties
		self.SetTitle("dialog")
		_icon = wx.NullIcon
		_icon.CopyFromBitmap(wx.Bitmap("C:\\Users\\Julian.Kizanis\\OneDrive - SAV Digital Environments\\Python Code\\Job Costing Program\\SAV-Social-Profile.jpg", wx.BITMAP_TYPE_ANY))
		self.SetIcon(_icon)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: are_you_sure_replace_dialog.__do_layout
		sizer_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		label_2 = wx.StaticText(self, wx.ID_ANY, "Are you Sure you want to replace/overwrite the project? The old data will not be saved.")
		label_2.Wrap(300)
		sizer_1.Add(label_2, 0, wx.ALL, 12)
		sizer_2.Add(self.panel_2, 1, 0, 0)
		sizer_2.Add(self.button_1, 0, wx.ALIGN_BOTTOM | wx.ALL | wx.FIXED_MINSIZE, 12)
		sizer_2.Add(self.button_5, 0, wx.ALIGN_BOTTOM | wx.ALL | wx.FIXED_MINSIZE, 12)
		sizer_1.Add(sizer_2, 1, wx.ALIGN_BOTTOM | wx.ALIGN_RIGHT | wx.ALL | wx.EXPAND | wx.FIXED_MINSIZE, 1)
		self.SetSizer(sizer_1)
		sizer_1.Fit(self)
		self.Layout()
		# end wxGlade

	def on_replace(self, event):  # wxGlade: are_you_sure_replace_dialog.<event_handler>
		print("Event handler 'on_replace' not implemented!")
		event.Skip()

	def on_back(self, event):  # wxGlade: are_you_sure_replace_dialog.<event_handler>
		print("Event handler 'on_back' not implemented!")
		event.Skip()

# end of class are_you_sure_replace_dialog

class are_you_sure_duplicate_dialog(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: are_you_sure_duplicate_dialog.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.panel_2 = wx.Panel(self, wx.ID_ANY)
		self.button_1 = wx.Button(self, wx.ID_ANY, "Duplicate")
		self.button_5 = wx.Button(self, wx.ID_ANY, "Back")

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.on_duplicate, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.on_back, self.button_5)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: are_you_sure_duplicate_dialog.__set_properties
		self.SetTitle("dialog_1")
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: are_you_sure_duplicate_dialog.__do_layout
		sizer_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		label_2 = wx.StaticText(self, wx.ID_ANY, "Are you Sure you want to add the project as a duplicate?")
		label_2.Wrap(300)
		sizer_1.Add(label_2, 0, wx.ALL, 12)
		sizer_2.Add(self.panel_2, 1, 0, 0)
		sizer_2.Add(self.button_1, 0, wx.ALIGN_BOTTOM | wx.ALL | wx.FIXED_MINSIZE, 12)
		sizer_2.Add(self.button_5, 0, wx.ALIGN_BOTTOM | wx.ALL | wx.FIXED_MINSIZE, 12)
		sizer_1.Add(sizer_2, 1, wx.ALIGN_BOTTOM | wx.ALIGN_RIGHT | wx.ALL | wx.EXPAND | wx.FIXED_MINSIZE, 1)
		self.SetSizer(sizer_1)
		sizer_1.Fit(self)
		self.Layout()
		# end wxGlade

	def on_duplicate(self, event):  # wxGlade: are_you_sure_duplicate_dialog.<event_handler>
		print("Event handler 'on_duplicate' not implemented!")
		event.Skip()

	def on_back(self, event):  # wxGlade: are_you_sure_duplicate_dialog.<event_handler>
		print("Event handler 'on_back' not implemented!")
		event.Skip()

# end of class are_you_sure_duplicate_dialog

class error_dialog(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: error_dialog.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.panel_2 = wx.Panel(self, wx.ID_ANY)
		self.button_5 = wx.Button(self, wx.ID_ANY, "Okay")

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.on_okay, self.button_5)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: error_dialog.__set_properties
		self.SetTitle("dialog_1")
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: error_dialog.__do_layout
		sizer_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		label_2 = wx.StaticText(self, wx.ID_ANY, "An unexpected error has occurred!")
		label_2.Wrap(300)
		sizer_1.Add(label_2, 0, wx.ALL, 12)
		sizer_2.Add(self.panel_2, 1, 0, 0)
		sizer_2.Add(self.button_5, 0, wx.ALIGN_BOTTOM | wx.ALL | wx.FIXED_MINSIZE, 12)
		sizer_1.Add(sizer_2, 1, wx.ALIGN_BOTTOM | wx.ALIGN_RIGHT | wx.ALL | wx.EXPAND | wx.FIXED_MINSIZE, 1)
		self.SetSizer(sizer_1)
		sizer_1.Fit(self)
		self.Layout()
		# end wxGlade

	def on_okay(self, event):  # wxGlade: error_dialog.<event_handler>
		print("Event handler 'on_okay' not implemented!")
		event.Skip()

# end of class error_dialog

class Datasheet_already_imported_dialog(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: Datasheet_already_imported_dialog.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.text_ctrl_already_imported = wx.TextCtrl(self, wx.ID_ANY, "{openDataSheet} has already been imported by {importedBy} on {importedDate}. If you would  like to import the project as a new project, select \"Duplicate\". If you want to refresh the exsisting data, select \"Replace\".", style=wx.BORDER_NONE | wx.TE_MULTILINE | wx.TE_READONLY)
		self.panel_2 = wx.Panel(self, wx.ID_ANY)
		self.button_6 = wx.Button(self, wx.ID_ANY, "Duplicate")
		self.button_1 = wx.Button(self, wx.ID_ANY, "Replace")
		self.button_5 = wx.Button(self, wx.ID_ANY, "Back")

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_TEXT, self.text_ctrl_openDataSheet, self.text_ctrl_already_imported)
		self.Bind(wx.EVT_BUTTON, self.on_duplicate, self.button_6)
		self.Bind(wx.EVT_BUTTON, self.on_replace, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.on_back, self.button_5)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: Datasheet_already_imported_dialog.__set_properties
		self.SetTitle("dialog_2")
		self.text_ctrl_already_imported.SetBackgroundColour(wx.Colour(255, 255, 255))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: Datasheet_already_imported_dialog.__do_layout
		sizer_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_1.Add(self.text_ctrl_already_imported, 0, wx.ALL | wx.EXPAND, 12)
		sizer_2.Add(self.panel_2, 1, 0, 0)
		sizer_2.Add(self.button_6, 0, wx.ALIGN_BOTTOM | wx.ALL | wx.FIXED_MINSIZE, 12)
		sizer_2.Add(self.button_1, 0, wx.ALIGN_BOTTOM | wx.ALL | wx.FIXED_MINSIZE, 12)
		sizer_2.Add(self.button_5, 0, wx.ALIGN_BOTTOM | wx.ALL | wx.FIXED_MINSIZE, 12)
		sizer_1.Add(sizer_2, 1, wx.ALIGN_BOTTOM | wx.ALIGN_RIGHT | wx.ALL | wx.EXPAND | wx.FIXED_MINSIZE, 1)
		self.SetSizer(sizer_1)
		sizer_1.Fit(self)
		self.Layout()
		# end wxGlade

	def text_ctrl_openDataSheet(self, event):  # wxGlade: Datasheet_already_imported_dialog.<event_handler>
		print("Event handler 'text_ctrl_openDataSheet' not implemented!")
		event.Skip()

	def on_duplicate(self, event):  # wxGlade: Datasheet_already_imported_dialog.<event_handler>
		print("Event handler 'on_duplicate' not implemented!")
		event.Skip()

	def on_replace(self, event):  # wxGlade: Datasheet_already_imported_dialog.<event_handler>
		print("Event handler 'on_replace' not implemented!")
		event.Skip()

	def on_back(self, event):  # wxGlade: Datasheet_already_imported_dialog.<event_handler>
		print("Event handler 'on_back' not implemented!")
		event.Skip()

# end of class Datasheet_already_imported_dialog

class Datasheet_open_frame(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: Datasheet_open_frame.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.text_ctrl_open_datasheet = wx.TextCtrl(self, wx.ID_ANY, "{openDataSheet} is open by a user. Please close {openDataSheet} and click \"Retry\".", style=wx.BORDER_NONE | wx.TE_MULTILINE | wx.TE_READONLY)
		self.panel_2 = wx.Panel(self, wx.ID_ANY)
		self.button_1 = wx.Button(self, wx.ID_ANY, "Retry")
		self.button_5 = wx.Button(self, wx.ID_ANY, "Back")

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_TEXT, self.text_ctrl_openDataSheet, self.text_ctrl_open_datasheet)
		self.Bind(wx.EVT_BUTTON, self.on_retry, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.on_back, self.button_5)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: Datasheet_open_frame.__set_properties
		self.SetTitle("dialog_3")
		self.text_ctrl_open_datasheet.SetBackgroundColour(wx.Colour(255, 255, 255))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: Datasheet_open_frame.__do_layout
		sizer_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_1.Add(self.text_ctrl_open_datasheet, 0, wx.ALL | wx.EXPAND, 12)
		sizer_2.Add(self.panel_2, 1, 0, 0)
		sizer_2.Add(self.button_1, 0, wx.ALIGN_BOTTOM | wx.ALL | wx.FIXED_MINSIZE, 12)
		sizer_2.Add(self.button_5, 0, wx.ALIGN_BOTTOM | wx.ALL | wx.FIXED_MINSIZE, 12)
		sizer_1.Add(sizer_2, 1, wx.ALIGN_BOTTOM | wx.ALIGN_RIGHT | wx.ALL | wx.EXPAND | wx.FIXED_MINSIZE, 1)
		self.SetSizer(sizer_1)
		sizer_1.Fit(self)
		self.Layout()
		# end wxGlade

	def text_ctrl_openDataSheet(self, event):  # wxGlade: Datasheet_open_frame.<event_handler>
		print("Event handler 'text_ctrl_openDataSheet' not implemented!")
		event.Skip()

	def on_retry(self, event):  # wxGlade: Datasheet_open_frame.<event_handler>
		print("Event handler 'on_retry' not implemented!")
		event.Skip()

	def on_back(self, event):  # wxGlade: Datasheet_open_frame.<event_handler>
		print("Event handler 'on_back' not implemented!")
		event.Skip()

# end of class Datasheet_open_frame

class MyApp(wx.App):
	def OnInit(self):
		self.frame = FirstFrame(None, wx.ID_ANY, "")
		self.SetTopWindow(self.frame)
		self.frame.Show()
		return True

# end of class MyApp

if __name__ == "__main__":
	ImportProjectDatasheets = MyApp(0)
	ImportProjectDatasheets.MainLoop()
